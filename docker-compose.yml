services:
  savvyo_db_manager:
    image: postgres:15-alpine
    container_name: savvyo_database
    restart: unless-stopped
    
    env_file:
      - .env
    
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD:-scram-sha-256}
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS:---auth-host=scram-sha-256}
    
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    
    volumes:
      - transfermarket_savvyo_db_data:/var/lib/postgresql/data
      - ./backups:/backups
      - ./init-scripts:/docker-entrypoint-initdb.d/
    
    networks:
      - savvyo_network
      - monitoring
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: savvyo_pgadmin
    restart: unless-stopped
    profiles: ["tools"]
    
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@savvyo_db.local
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    
    ports:
      - "8080:80"
    
    networks:
      - savvyo_network
    
    depends_on:
      savvyo_db_manager:
        condition: service_healthy

  # Monitoring Stack
  loki:
    image: grafana/loki:2.9.0
    container_name: savvyo_loki
    restart: unless-stopped
    profiles: ["monitoring", "tools"]
    
    ports:
      - "3100:3100"
    
    command: -config.file=/etc/loki/local-config.yaml
    
    volumes:
      - loki_data:/loki
      - ./monitoring/loki-config.yaml:/etc/loki/local-config.yaml
    
    networks:
      - monitoring
    
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  grafana:
    image: grafana/grafana-oss:10.1.0
    container_name: savvyo_grafana
    restart: unless-stopped
    profiles: ["monitoring", "tools"]
    
    ports:
      - "3000:3000"
    
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
      - GF_SERVER_DOMAIN=localhost
      - GF_LOG_LEVEL=info
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana-provisioning:/etc/grafana/provisioning
    
    networks:
      - monitoring
    
    depends_on:
      - loki
    
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  promtail:
    image: grafana/promtail:2.9.0
    container_name: savvyo_promtail
    restart: unless-stopped
    profiles: ["monitoring", "tools"]
    
    volumes:
      - /var/log:/var/log:ro
      - ./logs:/app/logs:ro
      - ./monitoring/promtail-config.yaml:/etc/promtail/config.yml
    
    command: -config.file=/etc/promtail/config.yml
    
    networks:
      - monitoring
    
    depends_on:
      - loki

volumes:
  transfermarket_savvyo_db_data:
    external: true
  
  grafana_data:
    driver: local
  loki_data:
    driver: local

networks:
  savvyo_network:
    driver: bridge
  
  monitoring:
    driver: bridge